;; Auto-generated. Do not edit!


(when (boundp 'master_plan_action::masterFeedback)
  (if (not (find-package "MASTER_PLAN_ACTION"))
    (make-package "MASTER_PLAN_ACTION"))
  (shadow 'masterFeedback (find-package "MASTER_PLAN_ACTION")))
(unless (find-package "MASTER_PLAN_ACTION::MASTERFEEDBACK")
  (make-package "MASTER_PLAN_ACTION::MASTERFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude masterFeedback.msg.html


(defclass master_plan_action::masterFeedback
  :super ros::object
  :slots (_goal ))

(defmethod master_plan_action::masterFeedback
  (:init
   (&key
    ((:goal __goal) 0.0)
    )
   (send-super :init)
   (setq _goal (float __goal))
   self)
  (:goal
   (&optional __goal)
   (if __goal (setq _goal __goal)) _goal)
  (:serialization-length
   ()
   (+
    ;; float64 _goal
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _goal
       (sys::poke _goal (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _goal
     (setq _goal (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get master_plan_action::masterFeedback :md5sum-) "96f1fc969cebfe9056357b5db1aa501e")
(setf (get master_plan_action::masterFeedback :datatype-) "master_plan_action/masterFeedback")
(setf (get master_plan_action::masterFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback definition
float64 goal


")



(provide :master_plan_action/masterFeedback "96f1fc969cebfe9056357b5db1aa501e")


